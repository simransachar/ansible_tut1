---

- name: Install MySQL
  apt: name={{ item }} update_cache={{ update_apt_cache }} state=installed
  with_items:
    - libmysqlclient-dev
    - mysql-server
  tags: packages

- name: Start the MySQL service
  # sudo: yes
  service: 
    name: mysql 
    state: started
    enabled: true

- name: copy cnf file with root password credentials
  template: src=.my.cnf dest=~/.my.cnf owner=root mode=0600

- name: Install with pip
  pip: virtualenv={{ virtualenv_path }} name=MYSQL-python state=present 

- name: Install with pip
  pip: name=MYSQL-python state=present 

- name: Create the MySQL vcl_dump
  template: src=vcl_dump.sql
            dest=/etc/vcl_dump.sql
            backup=yes

- name: Create the PostGRE vcl_dump
  template: src=vcl_dump_postgre.sql
            dest=/etc/vcl_dump_postgre.sql
            backup=yes

# - name: virtualenv activate
#   shell: source /webapps/vcl/bin/activate

- name: update mysql root password for all root accounts
  # sudo: yes
  mysql_user: 
    name: root 
    host: "{{ item }}" 
    password: root
    login_user: root
    login_password: root
    check_implicit_admin: yes
    priv: "*.*:ALL,GRANT"
  with_items:
    - ""
    - 127.0.0.1
    - localhost 

- mysql_db: name=vcl state=present

- mysql_db: state=import name=vcl target=/etc/vcl_dump.sql

- name: copy boto credentials
  template: src=boto.cfg dest=/etc/boto.cfg

- name: copy instance key
  template: src=instance_key.pem dest=/instance_key.pem mode=0400

- name: copy settings
  template: src=base.py dest=/webapps/vcl/vclansible/vcl/settings/base.py

- name: Run Django collectstatic
  django_manage:
    command: collectstatic
    app_path: "{{ project_path }}"
    virtualenv: "{{ virtualenv_path }}"
    settings: "{{ django_settings_file }}"
  environment: django_environment
  when: run_django_collectstatic is defined and run_django_collectstatic
  tags: django.collectstatic

  
